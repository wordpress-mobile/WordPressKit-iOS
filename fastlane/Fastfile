# frozen_string_literal: true

default_platform(:ios)

SWIFTLINT_PATH = './Pods/SwiftLint/swiftlint'
SWIFTLINT_PLUGIN_VALIDATION_BYPASS_XCARGS = '-skipPackagePluginValidation -skipMacroValidation'

platform :ios do
  # "swift build" fails because of the UIKit dependency, so we need to validate the package via xcodebuild
  lane :package_build do
    scheme = 'WordPressKit'

    xcodebuild(
      scheme:,
      xcargs: "-resolvePackageDependencies #{SWIFTLINT_PLUGIN_VALIDATION_BYPASS_XCARGS}"
    )

    run_tests(
      package_path: '.',
      scheme:,
      device: 'iPhone 15',
      prelaunch_simulator: true,
      xcargs: SWIFTLINT_PLUGIN_VALIDATION_BYPASS_XCARGS
    )
  end

  lane :lint do
    swiftlint(
      executable: SWIFTLINT_PATH,
      strict: true,
      quiet: true
    )
  end

  lane :format do
    swiftlint(
      executable: SWIFTLINT_PATH,
      strict: true,
      quiet: true,
      mode: :fix,
      format: true
    )
  end

  desc 'Builds the project and runs tests'
  lane :test do
    run_tests(
      scheme: 'WordPressKit',
      prelaunch_simulator: true,
      result_bundle: true,
      buildlog_path: File.join(__dir__, '.build', 'logs'),
      derived_data_path: File.join(__dir__, '.build', 'derived-data')
    )
  rescue StandardError => e
    $stdout.puts '^^^ +++'
    $stdout.puts 'Test failed!'

    result_bundle_path = 'fastlane/test_output/WordPressKit.xcresult'
    if File.exist?(File.join(Bundler.root, result_bundle_path))
      zip(
        path: result_bundle_path,
        output_path: "#{result_bundle_path}.zip",
        verbose: false
      )
    end

    raise e
  end
end
